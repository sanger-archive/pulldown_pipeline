<%= page(:'custom-pooling-page') do %>
  <div data-role="header" data-theme="b">
    <h1>Pre-Cap pooling</h1>
    <div data-role="navbar" data-iconpos="right">
      <ul>
<!--    <li><a href="#" data-theme="a" class="navbar-link ui-btn-active" rel="master-settings">Master Plex Level</a></li>-->
        <li><a href="#" data-theme="a" class="navbar-link" rel="edit-pool" >Edit Pre-cap pool</a></li>
<!--         <li><a href="#" data-theme="a" class="navbar-link" rel="move-pools" >Move Pools</a></li> -->
        <li><a href="#" data-theme="a" data-icon="add" class="navbar-link ui-btn-active" rel="pooling-summary" >Pooling Summary</a></li>
      </ul>
    </div>
  </div>


  <%= content do %>
        <%= form_for(
          @creation_form,
          :url  => pulldown_plate_children_path(@creation_form.parent),
          :as   => :plate,
          :html => { :method => :post }) do |form|
        %>

        <%= form.hidden_field :parent_uuid,        :value => @creation_form.parent_uuid %>
        <%= form.hidden_field :plate_purpose_uuid, :value => @creation_form.plate_purpose_uuid %>

    <div class="ui-grid-a">
      <div id="source-block" class="ui-block-a">

<!--         <div id="start-instructions-block" class="scape-ui-block">
          <div class="instructions ui-blody">
            <h3>Plate wide plex level</h3>
            <p>The master plex level can be used as a starting point for the ISC lib pool plate's layout.</p>
            <ol>
              <li>Indivdual plex levels can be set for each library by using the edit pool tab.</li>
              <li>Once you're happy with the plate layout you can go to the summary tab to create a new ISC lib pool plate.</li>
            </ol>
            <br/>
            <p>Failed wells are not shown on the source plate.</p>
            <p><i>NB. Final pipeline pooling will be as per the original submission.</i></p>
          </div>

        </div> -->

        <div id="edit-pool-instruction-block" class="scape-ui-block" style="display:none;">
          <div class="instructions ui-blody">
            <h3>Individual Library Plex levels</h3>
            <p>This tab allows you to change plex level on a library by library basis.</p>
            <br/>
            <ol>
              <li>First, select an aliquot from the sequencing pool you wish to change.</li>
              <li>Then, use the "Individual Plex level" controls to set a plex level for the Library.</li>
            </ol>
            <br/>
            <p><i>NB. Changing the plate master plex level will reset the layout of all pools on the plate.</i></p>
          </div>
        </div>

        <div id="create-plate-block" class="scape-ui-block" >
          <div class="instructions ui-blody">
            <h1>Layout Summary</h1>
          </div>

          <br/>

          <%= form.submit 'Make Pre-Cap pool Plate',
            :class        => 'create-button',
            :'data-theme' => 'b',
            :'data-icon'  => 'plus'
          %>
        </div>
      </div>

      <div class="ui-block-b">
        <div id="input-plate-block" class="scape-ui-block">
          <%= render :partial => "plates/empty_plate", :locals => {:css_class => 'source-plate'} %>
        </div>
      </div>

    </div>

    <div class="ui-grid-a">
      <div class="ui-block-a">
<!--         <div id="master-plex-level-block" class="scape-ui-block">
          <h2>Source Plate</h2>
          <div data-role="fieldcontain">
            <label for="master-plex-level">Plate Master Plex level:</label>
            <input type="range" name="master-plex-level" id="master-plex-level" data-highlight="true" value="8" min="1" max="96" />
          </div>

        </div> -->

        <div id="edit-pool-block" class="scape-ui-block" style="display:none;">
          <div data-role="fieldcontain">
            <label for="per-pool-plex-level">Individual Plex level:</label>
            <input type="range"
            name="per-pool-plex-level" id="per-pool-plex-level"
            data-highlight="true" value=""
            min="1" max="96"
            disabled="disabled" />
          </div>
        </div>

        <div id="pooling-summary-block" class="scape-ui-block">
          <ul id="pooling-summary" data-role="listview" data-inset="true"></ul>
        </div>

      </div>

      <div class="ui-block-b">
        <div id="output-plate-block" class="scape-ui-block">
          <%= render :partial => "plates/empty_plate", :locals => {:plate_presenter => @creation_form, :css_class => "destination-plate"} %>
        </div>
      </div>
    </div>
    <% end %>
  <% end %>


<script type="text/javascript">
  (function(window, $, undefined){
    "use strict";

    // Set up the SCAPE namespace
    if (window.SCAPE === undefined) {
      window.SCAPE = {};
    }

    // Extend SCAPE as it could have already been defined in the view.
    // Sequencing Pool ordering relys on Ruby 1.9 hashes being ordered
    $.extend(SCAPE, {
      coloursByLocation: <%= colours_by_location.to_json.html_safe %>,
      plate: {
        tabViews: <%= @creation_form.tab_views.to_json.html_safe %>,
        sequencingPools: <%= sorted_sequencing_pool_json %>,
        preCapGroups: <%= sorted_pre_cap_group_json %>
      }
    });

  })(window, $);
</script>
<% end %>
